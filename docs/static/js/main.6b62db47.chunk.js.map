{"version":3,"sources":["Components/AddCategory.js","Helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertapp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","style","display","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACvCN,EAAc,OAMd,uBAAGO,MAAO,CAACC,QAAQ,SAAnB,IAA8BT,EAA9B,KACA,2BAAOU,KAAK,OAAOC,MAAOX,EAAYY,SAlBpB,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,Y,uBCTlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE6EC,UAAUH,GAFvF,sBAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVvB,kBAeXM,GAfW,4CAAH,sDCGJ,SAASO,EAAT,GAAmC,IAAbH,EAAY,EAAZA,MAAMV,EAAM,EAANA,IAKvC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,ICNT,IAAMO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAjBAC,qBAAW,WAEPxB,EAAOC,GACFwB,MAAM,SAAChB,GAGJc,EAAS,CACLf,KAAKC,EACLY,SAAQ,SAMrB,CAACpB,IAGGqB,EDrBuBI,CAAazB,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAInB,OACI,6BACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,iFAAb,eAEZ,yBAAKA,UAAU,cAEPH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,kBAACK,EAAD,eACIW,IAAOhB,EAAIC,IACPD,UESjBiB,EA5BM,SAAC,GAA+B,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAGZ5C,mBAAS4C,GAHG,mBAGzCC,EAHyC,KAG7B9C,EAH6B,KAWhD,OACI,oCACI,wBAAIiC,UAAU,yCAAd,gBACA,kBAAC,EAAD,CAAajC,cAAeA,IAC5B,6BAEI8C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI0B,IAAK1B,EACLA,SAAYA,S,MClBpC8B,IAASC,OAAO,kBAAC,EAAD,CAAcH,kBAAmB,CAAC,SAAWI,SAASC,eAAe,U","file":"static/js/main.6b62db47.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(inputValue);\r\n        if(inputValue.trim().length>1){\r\n            \r\n            setCategories( categ => [inputValue,...categ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p style={{display:'none'}}> {inputValue} </p>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n} ","export const getGif = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=RWKdfvBTpBRhm0cWgo84JDBWgrkwF5Gh&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function GifGridItem({title,url}) {\r\n\r\n    \r\n    // console.log(props);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}","import React,{} from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport PropTypes from 'prop-types';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    // console.log(data);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"animate__animated animate__zoomIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash animate__infinite infinite animate__slow\t2s\">Cargando...</p>}\r\n\r\n            <div className=\"cont_cards\">\r\n                {\r\n                    images.map( img => \r\n                    \r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category : PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\";\r\nimport {getGif} from '../Helpers/getGif';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif(category)\r\n            .then( (gifs) => {\r\n\r\n                    \r\n                setState({\r\n                    data:gifs,\r\n                    loading:false\r\n                });\r\n\r\n\r\n            } );\r\n\r\n    }, [category] );\r\n\r\n\r\n    return state;\r\n\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = ({defaultCategories = [] }) => {\r\n        \r\n    // const [categories, setCategories] = useState(['DBZ']);\r\n    const [categories, setCategories] = useState(defaultCategories);\r\n    \r\n    // const handleAdd = () => {\r\n    //     // const updateCategories = [...categories,'Pokemon'];\r\n    //     // setCategories(updateCategories);\r\n    //     setCategories( categ => [...categ,'pokemon'] ); \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__animated animate__fadeInDown\">GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                        key={category}\r\n                        category = {category}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertapp';\nimport './index.css';\n\n\nReactDOM.render(<GifExpertApp defaultCategories={['DBZ']} />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}